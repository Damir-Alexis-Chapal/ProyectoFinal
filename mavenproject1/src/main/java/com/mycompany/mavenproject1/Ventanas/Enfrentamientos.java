/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1.Ventanas;

import com.mycompany.mavenproject1.Datos;
import com.mycompany.mavenproject1.*;
import java.io.Serializable;
import java.util.Collections;
import javax.swing.JOptionPane;

/**
 *
 * @author Alexis Chapal
 */
public class Enfrentamientos extends javax.swing.JFrame implements Serializable {

    /**
     * Creates new form Enfrentamientos
     */
    public static Torneo torneo_cuestion;
    int x=0;
    public Enfrentamientos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEnfrentamientosRecientes = new javax.swing.JTable();
        BotonAtras = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaProximosEnfrentamientos = new javax.swing.JTable();
        BotonSimular = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        notorneo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaEnfrentamientosRecientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "EQUIPO 1", "EQUIPO 2", "LUGAR", "FECHA", "HORA", "JUEZ", "RESULTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaEnfrentamientosRecientes);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 650, 145));

        BotonAtras.setFont(new java.awt.Font("Yu Gothic Medium", 1, 12)); // NOI18N
        BotonAtras.setText("ATRAS");
        BotonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAtrasActionPerformed(evt);
            }
        });
        getContentPane().add(BotonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, 90, 30));

        tablaProximosEnfrentamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "EQUIPO 1", "EQUIPO 2", "LUGAR", "FECHA", "HORA", "JUEZ", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaProximosEnfrentamientos);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 650, 133));

        BotonSimular.setFont(new java.awt.Font("Yu Gothic Medium", 1, 12)); // NOI18N
        BotonSimular.setText("SIMULAR ENFRENTAMIENTOS");
        BotonSimular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSimularActionPerformed(evt);
            }
        });
        getContentPane().add(BotonSimular, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 600, 200, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        notorneo.setFont(new java.awt.Font("Yu Gothic Medium", 2, 36)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addComponent(notorneo, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(notorneo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 650, 90));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Yu Gothic Medium", 1, 12)); // NOI18N
        jLabel2.setText("PROXIMOS ENFRENTAMIENTOS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(15, 15, 15))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, 250, 30));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Yu Gothic Medium", 1, 12)); // NOI18N
        jLabel6.setText("ENFRENTAMIENTOS RECIENTES");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, 260, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void ver_enfrentamientos(Torneo torneo){
        torneo_cuestion=torneo;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enfrentamientos().setVisible(true);
                String n= VerDatos.CampoDato1.getText();
                notorneo.setText(n);
                settear_tablas();
                
                
                 
                
            }
        });
    }
    public static void settear_tablas(){
        //SE SETEAN LOS PROXIMOS ENFRENTAMIENTOS
                int i=0;
                for (int j=0;j<torneo_cuestion.listado_enfrentamientos.size();j++){
                    Enfrentamiento enfrentamiento=torneo_cuestion.listado_enfrentamientos.get(j);
                    
                    if(enfrentamiento.estado.equals("TERMINADO")==false){
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.equipo1.nombre,i,0);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.equipo2.nombre,i,1);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.lugar,i,2);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.fecha.toString(),i,3);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.hora,i,4);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.juez.nombre,i,5);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.estado,i,6);
                        
                    }else{
                        tablaProximosEnfrentamientos.setValueAt("",i,0);
                        tablaProximosEnfrentamientos.setValueAt("",i,1);
                        tablaProximosEnfrentamientos.setValueAt("",i,2);
                        tablaProximosEnfrentamientos.setValueAt("",i,3);
                        tablaProximosEnfrentamientos.setValueAt("",i,4);
                        tablaProximosEnfrentamientos.setValueAt("",i,5);
                        tablaProximosEnfrentamientos.setValueAt("",i,6);
                    }i++;
                }
                //SE SETEAN LOS ENFRENTAMIENTOS TERMINADOS
                int n=0;
                for (int k=0;k<torneo_cuestion.listado_enfrentamientos.size();k++){
                    Enfrentamiento enfrentamiento=torneo_cuestion.listado_enfrentamientos.get(k);
                    if(enfrentamiento.estado.equals("TERMINADO")){
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.equipo1.nombre,n,0);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.equipo2.nombre,n,1);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.lugar,n,2);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.fecha.toString(),n,3);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.hora,n,4);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.juez.nombre,n,5);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.resultado.toString(),n,6);
                        
                    }else{
                        tablaEnfrentamientosRecientes.setValueAt("",i,0);
                        tablaEnfrentamientosRecientes.setValueAt("",i,1);
                        tablaEnfrentamientosRecientes.setValueAt("",i,2);
                        tablaEnfrentamientosRecientes.setValueAt("",i,3);
                        tablaEnfrentamientosRecientes.setValueAt("",i,4);
                        tablaEnfrentamientosRecientes.setValueAt("",i,5);
                        tablaEnfrentamientosRecientes.setValueAt("",i,6);
                    }n++;
                }
    }
    private void BotonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAtrasActionPerformed
        this.dispose();
    }//GEN-LAST:event_BotonAtrasActionPerformed

    private void BotonSimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSimularActionPerformed
        
            Enfrentamiento enfrentamiento=torneo_cuestion.listado_enfrentamientos.get(x);

            if(enfrentamiento.estado.equals("ACTIVO")){
                if(Datos.obtenerInstancia().listado_torneos_futbol.contains(torneo_cuestion)){
                    enfrentamiento.generarResultadoFutbol();
                    enfrentamiento.estado="TERMINADO";
                    
                    if(enfrentamiento.resultado.puntaje1-enfrentamiento.resultado.puntaje2==0){
                    
                        enfrentamiento.equipo1.puntos=enfrentamiento.equipo1.puntos+1;
                        enfrentamiento.equipo2.puntos=enfrentamiento.equipo2.puntos+1;
                    
                        enfrentamiento.equipo1.empatados=enfrentamiento.equipo1.empatados+1;
                        enfrentamiento.equipo2.empatados=enfrentamiento.equipo2.empatados+1;
                    }else if(enfrentamiento.resultado.puntaje1-enfrentamiento.resultado.puntaje2<0){
                        enfrentamiento.equipo2.puntos=enfrentamiento.equipo2.puntos+3;
                    
                        enfrentamiento.equipo1.perdidos=enfrentamiento.equipo1.perdidos+1;
                        enfrentamiento.equipo2.ganados=enfrentamiento.equipo2.ganados+1;
                    
                    }else{
                        enfrentamiento.equipo1.puntos=enfrentamiento.equipo1.puntos+3;
                    
                        enfrentamiento.equipo1.ganados=enfrentamiento.equipo1.ganados+1;
                        enfrentamiento.equipo2.perdidos=enfrentamiento.equipo2.perdidos+1;
                    }
                    
                }else if (Datos.obtenerInstancia().listado_torneos_ajedrez.contains(torneo_cuestion)){
                    enfrentamiento.generarResultadoAjedrez();
                    enfrentamiento.estado="TERMINADO";
                    
                    if(enfrentamiento.resultado.puntaje1-enfrentamiento.resultado.puntaje2<0){
                        enfrentamiento.equipo2.puntos=enfrentamiento.equipo2.puntos+1;
                    
                        enfrentamiento.equipo1.perdidos=enfrentamiento.equipo1.perdidos+1;
                        enfrentamiento.equipo2.ganados=enfrentamiento.equipo2.ganados+1;
                    
                    }else{
                        enfrentamiento.equipo1.puntos=enfrentamiento.equipo1.puntos+1;
                    
                        enfrentamiento.equipo1.ganados=enfrentamiento.equipo1.ganados+1;
                        enfrentamiento.equipo2.perdidos=enfrentamiento.equipo2.perdidos+1;
                    }
                    
                    
                    
                }else if(Datos.obtenerInstancia().listado_torneos_volley.contains(torneo_cuestion)){
                    enfrentamiento.generarResultadoVolley();
                    enfrentamiento.estado="TERMINADO";
                    
                    
                    
                        enfrentamiento.equipo1.puntos=enfrentamiento.equipo1.puntos+enfrentamiento.resultado.puntaje1;
                        enfrentamiento.equipo2.puntos=enfrentamiento.equipo2.puntos+enfrentamiento.resultado.puntaje2;
                    
                        enfrentamiento.equipo1.empatados=0;
                        enfrentamiento.equipo2.empatados=0;
                                            
                        enfrentamiento.equipo1.perdidos=enfrentamiento.equipo1.perdidos+enfrentamiento.resultado.puntaje2;
                        enfrentamiento.equipo2.perdidos=enfrentamiento.equipo2.perdidos+enfrentamiento.resultado.puntaje1;
                        
                        enfrentamiento.equipo2.ganados=enfrentamiento.equipo2.ganados+enfrentamiento.resultado.puntaje2;                    
                        enfrentamiento.equipo1.ganados=enfrentamiento.equipo1.ganados+enfrentamiento.resultado.puntaje1;
                        
                    
                    
                }else if(Datos.obtenerInstancia().listado_torneos_basket.contains(torneo_cuestion)){
                    enfrentamiento.generarResultadoBasket();
                    enfrentamiento.estado="TERMINADO";
                    
                    if(enfrentamiento.resultado.puntaje1-enfrentamiento.resultado.puntaje2==0){
                    
                        enfrentamiento.equipo1.puntos=enfrentamiento.equipo1.puntos+1;
                        enfrentamiento.equipo2.puntos=enfrentamiento.equipo2.puntos+1;
                    
                        enfrentamiento.equipo1.empatados=enfrentamiento.equipo1.empatados+1;
                        enfrentamiento.equipo2.empatados=enfrentamiento.equipo2.empatados+1;
                    }else if(enfrentamiento.resultado.puntaje1-enfrentamiento.resultado.puntaje2<0){
                        enfrentamiento.equipo2.puntos=enfrentamiento.equipo2.puntos+3;
                    
                        enfrentamiento.equipo1.perdidos=enfrentamiento.equipo1.perdidos+1;
                        enfrentamiento.equipo2.ganados=enfrentamiento.equipo2.ganados+1;
                    
                    }else{
                        enfrentamiento.equipo1.puntos=enfrentamiento.equipo1.puntos+3;
                    
                        enfrentamiento.equipo1.ganados=enfrentamiento.equipo1.ganados+1;
                        enfrentamiento.equipo2.perdidos=enfrentamiento.equipo2.perdidos+1;
                    }
                }
                
                
                //seteamos el enfrentamiento en la lista de enfrentamientos
                torneo_cuestion.listado_enfrentamientos.set(x, enfrentamiento);
                
                //seteamos los equipos en la lista de Datos
                if(Datos.obtenerInstancia().listado_torneos_futbol.contains(torneo_cuestion)){
                    for(int j=0;j<Datos.obtenerInstancia().listado_torneos_futbol.size();j++){
                        if(Datos.obtenerInstancia().listado_torneos_futbol.get(j).nombre.equals(torneo_cuestion.nombre)){
                        
                            Datos.obtenerInstancia().listado_torneos_futbol.set(j, torneo_cuestion);
                        }
                    }
                    
                }
                
                settear_tablas();
            }
        if(x==torneo_cuestion.listado_enfrentamientos.size()){
            x=0;
        }else{
            x++;
        }
        
    }//GEN-LAST:event_BotonSimularActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAtras;
    private javax.swing.JButton BotonSimular;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JLabel notorneo;
    public static javax.swing.JTable tablaEnfrentamientosRecientes;
    public static javax.swing.JTable tablaProximosEnfrentamientos;
    // End of variables declaration//GEN-END:variables
}
