/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1.Ventanas;

import com.mycompany.mavenproject1.Datos;
import com.mycompany.mavenproject1.*;
import java.io.Serializable;
import java.util.Collections;

/**
 *
 * @author Alexis Chapal
 */
public class Enfrentamientos extends javax.swing.JFrame implements Serializable {

    /**
     * Creates new form Enfrentamientos
     */
    public static Torneo torneo_cuestion;
    static int x=0;
    public Enfrentamientos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEnfrentamientosRecientes = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        BotonAtras = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaProximosEnfrentamientos = new javax.swing.JTable();
        BotonSimular = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("TORNEO X");

        jLabel2.setText("PROXIMOS ENFRENTAMIENTOS");

        jLabel5.setText("logo");

        tablaEnfrentamientosRecientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "EQUIPO 1", "EQUIPO 2", "LUGAR", "FECHA", "HORA", "JUEZ", "RESULTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaEnfrentamientosRecientes);

        jLabel6.setText("ENFRENTAMIENTOS RECIENTES");

        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        BotonAtras.setText("ATRAS");
        BotonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAtrasActionPerformed(evt);
            }
        });

        tablaProximosEnfrentamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "EQUIPO 1", "EQUIPO 2", "LUGAR", "FECHA", "HORA", "JUEZ", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaProximosEnfrentamientos);

        BotonSimular.setText("SIMULAR ENFRENTAMIENTOS");
        BotonSimular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSimularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(9, 9, 9))
            .addGroup(layout.createSequentialGroup()
                .addGap(382, 382, 382)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(BotonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonSimular)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(74, 74, 74)
                .addComponent(jLabel2)
                .addGap(59, 59, 59)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonSimular, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    public static void ver_enfrentamientos(Torneo torneo){
        torneo_cuestion=torneo;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Enfrentamientos().setVisible(true);
                settear_tablas();
                
                
                 
                
            }
        });
    }
    public static void settear_tablas(){
        //SE SETEAN LOS PROXIMOS ENFRENTAMIENTOS
                int i=0;
                for (int j=0;j<torneo_cuestion.listado_enfrentamientos.size();j++){
                    Enfrentamiento enfrentamiento=torneo_cuestion.listado_enfrentamientos.get(j);
                    
                    if(enfrentamiento.estado.equals("TERMINADO")==false){
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.equipo1.nombre,i,0);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.equipo2.nombre,i,1);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.lugar,i,2);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.fecha.toString(),i,3);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.hora,i,4);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.juez.nombre,i,5);
                        tablaProximosEnfrentamientos.setValueAt(enfrentamiento.estado,i,6);
                        
                    }else{
                        tablaProximosEnfrentamientos.setValueAt("",i,0);
                        tablaProximosEnfrentamientos.setValueAt("",i,1);
                        tablaProximosEnfrentamientos.setValueAt("",i,2);
                        tablaProximosEnfrentamientos.setValueAt("",i,3);
                        tablaProximosEnfrentamientos.setValueAt("",i,4);
                        tablaProximosEnfrentamientos.setValueAt("",i,5);
                        tablaProximosEnfrentamientos.setValueAt("",i,6);
                    }i++;
                }
                //SE SETEAN LOS ENFRENTAMIENTOS TERMINADOS
                int n=0;
                for (int k=0;k<torneo_cuestion.listado_enfrentamientos.size();k++){
                    Enfrentamiento enfrentamiento=torneo_cuestion.listado_enfrentamientos.get(k);
                    if(enfrentamiento.estado.equals("TERMINADO")){
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.equipo1.nombre,n,0);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.equipo2.nombre,n,1);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.lugar,n,2);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.fecha.toString(),n,3);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.hora,n,4);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.juez.nombre,n,5);
                        tablaEnfrentamientosRecientes.setValueAt(enfrentamiento.resultado.toString(),n,6);
                        
                    }else{
                        tablaEnfrentamientosRecientes.setValueAt("",i,0);
                        tablaEnfrentamientosRecientes.setValueAt("",i,1);
                        tablaEnfrentamientosRecientes.setValueAt("",i,2);
                        tablaEnfrentamientosRecientes.setValueAt("",i,3);
                        tablaEnfrentamientosRecientes.setValueAt("",i,4);
                        tablaEnfrentamientosRecientes.setValueAt("",i,5);
                        tablaEnfrentamientosRecientes.setValueAt("",i,6);
                    }n++;
                }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BotonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAtrasActionPerformed
        this.dispose();
    }//GEN-LAST:event_BotonAtrasActionPerformed

    private void BotonSimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSimularActionPerformed
        
            Enfrentamiento enfrentamiento=torneo_cuestion.listado_enfrentamientos.get(x);
            
            if(enfrentamiento.estado.equals("ACTIVO")){
                if(Datos.obtenerInstancia().listado_torneos_futbol.contains(torneo_cuestion)){
                    enfrentamiento.generarResultadoFutbol();
                    enfrentamiento.estado="TERMINADO";
                }else{
                //else ifs paara los otros tipos de deporte
                }
                
                if(enfrentamiento.resultado.puntaje1-enfrentamiento.resultado.puntaje2==0){
                    
                    enfrentamiento.equipo1.puntos++;
                    enfrentamiento.equipo2.puntos++;
                }else if(enfrentamiento.resultado.puntaje1-enfrentamiento.resultado.puntaje2<0){
                    enfrentamiento.equipo2.puntos=enfrentamiento.equipo2.puntos+3;
                    
                }else{
                    enfrentamiento.equipo1.puntos=enfrentamiento.equipo1.puntos+3;
                }
                //seteamos el enfrentamiento en la lista de enfrentamientos
                torneo_cuestion.listado_enfrentamientos.set(x, enfrentamiento);
                
                //seteamos los equipos en la lista de Datos
                if(Datos.obtenerInstancia().listado_torneos_futbol.contains(torneo_cuestion)){
                    for(int j=0;j<Datos.obtenerInstancia().listado_torneos_futbol.size();j++){
                        if(Datos.obtenerInstancia().listado_torneos_futbol.get(j).nombre.equals(torneo_cuestion.nombre)){
                        
                            Datos.obtenerInstancia().listado_torneos_futbol.set(j, torneo_cuestion);
                        }
                    }
                    
                }
                settear_tablas();
            }
        x++;
    }//GEN-LAST:event_BotonSimularActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAtras;
    private javax.swing.JButton BotonSimular;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTable tablaEnfrentamientosRecientes;
    public static javax.swing.JTable tablaProximosEnfrentamientos;
    // End of variables declaration//GEN-END:variables
}
